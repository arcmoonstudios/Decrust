name: Decrust CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Fast-fail checks to catch formatting and lint errors early
  code-quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: 📦 Cache dependencies
        uses: swatinem/rust-cache@v2

      - name: 🐛 Debug Environment
        run: |
          echo "Rust version: $(rustc --version)"
          echo "Cargo version: $(cargo --version)"
          echo "RUST_BACKTRACE: $RUST_BACKTRACE"
          echo "Platform: $(uname -a)"
          echo "Working directory: $(pwd)"
          echo "Cargo.toml exists: $(test -f Cargo.toml && echo 'yes' || echo 'no')"

      - name: 🎨 Check formatting
        run: |
          echo "Checking code formatting..."
          cargo fmt --all -- --check

      - name: 📎 Run clippy
        run: |
          echo "Running clippy lints..."
          cargo clippy --all-targets --all-features -- -D warnings
  # Basic tests
  test:
    name: 🧪 Test
    needs: [code-quality]
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 📦 Cache dependencies
        uses: swatinem/rust-cache@v2

      - name: 🐛 Debug Environment
        run: |
          echo "Rust version: $(rustc --version)"
          echo "Cargo version: $(cargo --version)"
          echo "RUST_BACKTRACE: $RUST_BACKTRACE"

      - name: 🔨 Build
        run: |
          echo "Building all targets..."
          cargo build --all-targets

      - name: 🧪 Run tests
        run: |
          echo "Running all tests..."
          cargo test --all-targets

  # Check documentation
  docs:
    name: 📚 Documentation
    needs: [code-quality]
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 📦 Cache dependencies
        uses: swatinem/rust-cache@v2

      - name: 📖 Check documentation
        run: |
          echo "Building documentation..."
          cargo doc --all-features --no-deps
